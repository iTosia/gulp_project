window.CORP={},function(){var e={isEmail:function(e){return/^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i.test(e)},isNumber:function(e){return/^\d+$/.test(e)},isNotEmpty:function(e){return Boolean(e)}};window.validation=e}(),function(){var o={},e=document.querySelector(".form-container"),t=null;function n(){o.close(),t.removeEventListener("click",n)}o.open=function(){e.classList.remove("is-hidden"),(t=document.querySelector(".form__close-button")).addEventListener("click",n)},o.close=function(){e.classList.add("is-hidden")},o.isValid=function(){var e=document.querySelectorAll('[data-valid="required"]'),t=document.querySelector("[data-email]").value,n=document.querySelector("[data-number]").value;return o.isAllCompleted(e)?CORP.validation.isEmail(t)?!!CORP.validation.isNumber(n)||(console.log("Не верный номер"),!1):(console.log("Не верный email"),!1):(console.log("Заполните все поля"),!1)},o.isAllCompleted=function(e){for(var t=!0,n=0;n<e.length;n++)if(!CORP.validation.isNotEmpty(e[n].value)){t=!1;break}return t},CORP.form=o}(),function(){var e={};e.toggleToActiveLink=function(e){for(var t,n,o,i=document.querySelectorAll(".nav__link"),l=e.dataset.link,a=0;a<i.length;a++)i[a].classList.contains("nav__link--active")&&i[a].classList.remove("nav__link--active");e.classList.add("nav__link--active"),t=l,n=document.querySelector("."+t).getBoundingClientRect(),o=setInterval(function(){document.body.scrollTop<n.top?window.scrollBy(0,10):clearInterval(o)},.5)},CORP.navigation=e}(),function(){var e=document.querySelector(".arrow-down"),t=document.querySelector(".form"),n=document.querySelector(".nav");e&&e.addEventListener("click",function(e){e.preventDefault(),CORP.form.open()}),t&&t.addEventListener("submit",function(e){e.preventDefault(),CORP.form.isValid()?console.log("All good"):console.log("Not valid")}),n&&n.addEventListener("click",function(e){e.preventDefault();var t=e.target;"a"===t.tagName.toLowerCase()&&(e.preventDefault(),CORP.navigation.toggleToActiveLink(t))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
